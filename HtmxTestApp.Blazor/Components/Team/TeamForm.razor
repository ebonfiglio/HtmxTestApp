@using HtmxTestApp.Domain.Services.Contracts
@using HtmxTestApp.Shared.Entities
@inject ITeamService TeamService
@inject ICountryService CountryService

<div>
    <div class="form-group">
        <label for="name">Name</label>
        <InputText id="name" class="form-control" @bind-Value="teamDto.Name" />
    </div>

    <div class="form-group">
        <label for="country">Country</label>
        <InputSelect id="country" class="form-control" @bind-Value="teamDto.CountryId">
            @foreach (var country in countries)
            {
                <option value="@country.Id">@country.Name</option>
            }
        </InputSelect>
    </div>

    <button class="btn btn-primary" @onclick="Save">Save</button>
    <button class="btn btn-secondary" @onclick="Cancel">Cancel</button>
</div>

@code {
    [Parameter]
    public Guid? TeamId { get; set; }

    [Parameter]
    public EventCallback Save { get; set; }

    [Parameter]
    public EventCallback Cancel { get; set; }

    [Parameter]
    public string SubmitButtonText { get; set; } = "Save";

    private TeamDto teamDto { get; set; } = new();
    private List<Country> countries = new();

    protected override async Task OnInitializedAsync()
    {
        countries = await CountryService.GetAllAsync();

        if (TeamId.HasValue)
        {
            var team = await TeamService.GetAsync(TeamId.Value);
            teamDto.Name = team.Name;
            teamDto.CountryId = team.CountryId;
        }
    }

    public class TeamDto
    {
        public string Name { get; set; }
        public Guid? CountryId { get; set; }
    }
}